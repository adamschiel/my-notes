{"version":3,"sources":["components/ConfirmDialog.js","components/NoteDialog.js","components/db.js","components/NoteList.js","App.js","serviceWorker.js","index.js"],"names":["ConfirmDialog","title","children","open","setOpen","onConfirm","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogActions","Button","variant","onClick","color","useStyles","makeStyles","theme","appBar","position","dialogEditTitle","marginLeft","spacing","flex","noteTitle","margin","overflow","textAlign","textOverflow","whiteSpace","noteData","noteButton","backgroundColor","paddingTop","width","textTransform","notePaper","top","left","bottom","right","noteTextField","Transition","React","forwardRef","props","ref","Slide","direction","NoteDialog","classes","useState","confirmOpen","setConfirmOpen","handleClose","className","Paper","elevation","Typography","note","Divider","data","fullScreen","TransitionComponent","AppBar","Toolbar","IconButton","edge","aria-label","fontSize","onNoteDelete","onNoteSave","document","getElementById","value","TextField","label","defaultValue","multiline","db","Dexie","version","stores","notes","NoteList","handleNoteSave","table","update","Date","now","then","noteToUpdate","state","find","newList","filter","Object","assign","sort","a","b","date","setState","handleNoteDelete","delete","handleNoteAdd","add","newNotes","toArray","style","this","Grid","container","padding","map","currentNote","item","xs","sm","lg","xl","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9853c6ea.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst ConfirmDialog = ({ title, children, open, setOpen, onConfirm }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={() => setOpen(false)}\n      aria-labelledby=\"confirm-dialog\"\n    >\n      <DialogTitle id=\"confirm-dialog\">{title}</DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={() => setOpen(false)}\n          color=\"secondary\"\n        >\n          No\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setOpen(false);\n            onConfirm();\n          }}\n          color=\"default\"\n        >\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmDialog;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Slide from '@material-ui/core/Slide';\nimport Paper from '@material-ui/core/Paper';\nimport ConfirmDialog from './ConfirmDialog.js';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  dialogEditTitle: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  noteTitle: {\n    margin: 3,\n    overflow: 'hidden',\n    textAlign: 'left',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  noteData: {\n    margin: 3,\n    overflow: 'hidden',\n    textAlign: 'left',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  noteButton: {\n    backgroundColor: 'yellow',\n    paddingTop: '75%',\n    position: 'relative',\n    width: '100%',\n    textTransform: 'none',\n  },\n  notePaper: {\n    backgroundColor: 'yellow',\n    position: 'absolute',\n    top: 2,\n    left: 2,\n    bottom: 2,\n    right: 2,\n  },\n  noteTextField: {\n    margin: 10,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function NoteDialog( props ) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [confirmOpen, setConfirmOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    props.onNoteSave( props.note.id,\n                      document.getElementById(\"note-title-tf-\"+props.note.id).value,\n                      document.getElementById(\"note-data-tf-\"+props.note.id).value );\n    handleClose();\n  };\n\n  const handleDelete = () => {\n    props.onNoteDelete( props.note.id );\n    handleClose();\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" className={classes.noteButton} onClick={handleClickOpen}>\n        <Paper elevation={0} className={classes.notePaper}>\n          <Typography variant=\"h6\" className={classes.noteTitle}>\n            {props.note.title}\n          </Typography>\n          <Divider />\n          <Typography className={classes.noteData}>\n            {props.note.data}\n          </Typography>\n        </Paper>\n      </Button>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon fontSize=\"large\" />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.dialogEditTitle}>\n              Edit Note\n            </Typography>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={() => setConfirmOpen(true)} aria-label=\"delete\">\n              <DeleteIcon fontSize=\"large\" />\n            </IconButton>\n            <ConfirmDialog\n              title=\"Delete Note?\"\n              open={confirmOpen}\n              setOpen={setConfirmOpen}\n              onConfirm={handleDelete}\n            >\n              Are you sure you want to delete this note?\n            </ConfirmDialog>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleSave} aria-label=\"save\">\n              <SaveIcon fontSize=\"large\" />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n          <TextField id={\"note-title-tf-\"+props.note.id} variant=\"outlined\" label=\"Title\"\n            defaultValue={props.note.title} className={classes.noteTextField} />\n          <TextField multiline id={\"note-data-tf-\"+props.note.id} variant=\"outlined\" label=\"Note\"\n            defaultValue={props.note.data} className={classes.noteTextField} />\n      </Dialog>\n    </div>\n  );\n}\n","import Dexie from 'dexie';\n\nconst db = new Dexie('MyNotesIDB');\ndb.version(1).stores({ notes: '++id,title,data' });\n\nexport default db;\n","import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport NoteDialog from './NoteDialog'\nimport db from './db';\n\nclass NoteList extends Component {\n    constructor( props ) {\n      super( props );\n\n      this.state = { notes: [] }\n    }\n\n    componentDidMount() {\n      db.table('notes')\n        .toArray()\n        .then((notes) => {\n          notes.sort(function(a, b){return(a.date < b.date)})\n          this.setState({ notes });\n        });\n    }\n\n    handleNoteSave = ( id, title, data ) => {\n      db.table('notes')\n        .update(id, { \"title\": title, \"data\": data, \"date\": Date.now() })\n        .then(() => {\n          const noteToUpdate = this.state.notes.find((note) => note.id === id);\n          const newList = [\n            ...this.state.notes.filter((note) => note.id !== id),\n            Object.assign({}, noteToUpdate, { \"title\": title, \"data\": data, \"date\": Date.now() })\n          ];\n          newList.sort(function(a, b){return(a.date < b.date)});\n          this.setState({ notes: newList });\n        });\n    }\n\n    handleNoteDelete = ( id ) => {\n      db.table('notes')\n        .delete(id)\n        .then(() => {\n          const newList = this.state.notes.filter((note) => note.id !== id);\n          this.setState({ notes: newList });\n        });\n    }\n\n    handleNoteAdd = () => {\n     const note = {\n        \"title\": \"\",\n        \"data\": \"\",\n        \"date\": Date.now()\n      };\n\n      db.table('notes')\n        .add(note)\n        .then((id) => {\n          const newNotes = [...this.state.notes, Object.assign({}, note, { id })];\n          newNotes.sort(function(a, b){return(a.date < b.date)});\n          this.setState({ notes: newNotes });\n        });\n    }\n\n    render() {\n      return (\n        <div>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography variant=\"title\" color=\"inherit\" style={{textAlign: 'left', flex: 1}}>\n                My Notes\n              </Typography>\n              <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleNoteAdd} aria-label=\"add\">\n                <AddIcon fontSize=\"large\" />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          { this.state.notes ? (\n            <Grid container spacing={1} style={{padding: 8}}>\n              { this.state.notes.map((currentNote) => (\n                <Grid item xs={4} sm={3} lg={2} xl={1}>\n                  <NoteDialog \n                    note={currentNote} \n                    onNoteSave={this.handleNoteSave} \n                    onNoteDelete={this.handleNoteDelete} />\n                </Grid>\n              ))}\n            </Grid>\n          ) : \"No notes found\" }\n        </div>\n      )\n  }\n}\nexport default NoteList;\n\n","import React from 'react';\nimport NoteList from './components/NoteList'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NoteList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}